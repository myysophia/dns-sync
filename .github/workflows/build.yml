name: Build and Release

on:
  push:
    tags:
      - 'v*' # 监听以 v 开头的标签推送
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # 定义要构建的目标平台
        include:
          - goos: linux
            goarch: amd64
            suffix: linux-amd64
#          - goos: windows
#            goarch: amd64
#            suffix: windows-amd64.exe
#          - goos: darwin
#            goarch: amd64
#            suffix: darwin-amd64
#          - goos: darwin
#            goarch: arm64
#            suffix: darwin-arm64

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.3'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        mkdir -p dist
        go build -ldflags="-s -w" -o dist/dns-sync-${{ matrix.suffix }} main.go

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dns-sync-${{ matrix.suffix }}
        path: dist/dns-sync-${{ matrix.suffix }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # 只在标签推送时创建release
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*/dns-sync-*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
